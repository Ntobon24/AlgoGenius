Punto 3) Punto 3 (1.5): Una palabra de 7 letras se forma utilizando las letras A, B, C, D, E, F y G. ¿Cuántas
permutaciones diferentes se pueden hacer si las letras A y B no pueden estar juntas?

import math

total_permutaciones = math.factorial(7)

permutaciones_con_AB_juntos = 2 * math.factorial(6)

permutaciones_sin_AB_juntos = total_permutaciones - permutaciones_con_AB_juntos

print("El número de permutaciones donde A y B no pueden estar juntas es:", permutaciones_sin_AB_juntos)


PUnto 2) Punto 2 (2.0): Dada una cadena de números de entrada, encuentre todas las combinaciones de números
que se pueden formar usando dígitos en el mismo orden.

def encontrar_combinaciones(cadena, combinacion="", combinaciones=set()):
    if not cadena:
        combinaciones.add(combinacion.strip())
        return
    
    encontrar_combinaciones(cadena[1:], combinacion + cadena[0] + " ", combinaciones)
    encontrar_combinaciones(cadena[1:], combinacion + cadena[0], combinaciones)

    return sorted(combinaciones)

# Ejemplos de uso
entrada1 = "123"
entrada2 = "1234"

print("Entrada:", entrada1)
print("\n".join(encontrar_combinaciones(entrada1)))
print("\nEntrada:", entrada2)
print("\n".join(encontrar_combinaciones(entrada2)))




Punto 1) Subido como PDF En la UVIRTUAL
